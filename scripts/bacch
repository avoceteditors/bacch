#!/usr/bin/env python3
##############################################################################
# Copyright (c) 2021, Kenneth P. J. Dyer <kenneth@avoceteditors.com>
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# * Redistributions of source code must retain the above copyright notice, this
#   list of conditions and the following disclaimer.
# * Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
# * Neither the name of the copyright holder nor the name of its
#   contributors may be used to endorse or promote products derived from
#   this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
##############################################################################

# Module Imports
import argparse
import logging
import sys
import bacch.commands.tex

logger = logging.getLogger()

def run_version(verbose):
    """ Main command, reports version information to stdout """
    logger.info("Called version operation")

    name = "Bacch"
    version = "2021.1"
    byline = "The Document Processor"
    author = "Kenneth P. J. Dyer <kenneth@avoceteditors.com>"
    comp = "Avocet Editorial Consulting"

    if verbose:
        content = [
            f"{name} - {byline}",
            author,
            comp,
            f"Version {version}"]
    else:
        content = [f"{name} - version {version}"]

    print("\n  ".join(content))
    sys.exit(0)


PARSER = argparse.ArgumentParser()
PARSER.set_defaults(func=run_version)

PARSER.add_argument("-D", "--debug", action="store_true")
PARSER.add_argument("-f", "--format", default="tex")
PARSER.add_argument("-o", "--output", default="build")
PARSER.add_argument("-v", "--verbose", action="store_true")
PARSER.add_argument("-V", "--version", action="store_true")

CMD = PARSER.add_subparsers(title="command")

CMD_XML = CMD.add_parser("xml")

CMD_TEX = CMD.add_parser("tex")
CMD_TEX.set_defaults(func=bacch.commands.tex.run_tex)
CMD_TEX.add_argument("source", nargs="?", default="src")

CMD_PDF = CMD.add_parser("pdf")
CMD_PDF.set_defaults(func=bacch.commands.tex.run_pdf)
CMD_PDF.add_argument("source", nargs="?", default="src")

ARGS = PARSER.parse_args()

# Configure Logging
LOG_FORMAT = "[ %(levelname)s ]: %(message)s"
LOG_LEVEL = logging.WARN

if ARGS.debug:
    LOG_LEVEL = logging.DEBUG
elif ARGS.verbose:
    LOG_LEVEL = logging.INFO

logging.basicConfig(format=LOG_FORMAT, level=LOG_LEVEL)
ARGS.func(ARGS)
